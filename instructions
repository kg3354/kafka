// downloading it locally
helm pull bitnami/kafka --version <version> --untar

// to deploy
helm install kafka-test . -f values.yaml


Release "kafka-test" has been upgraded. Happy Helming!
NAME: kafka-test
LAST DEPLOYED: Mon Feb 12 13:04:12 2024
NAMESPACE: fenton-neuroscience
STATUS: deployed
REVISION: 2
TEST SUITE: None
NOTES:
CHART NAME: kafka
CHART VERSION: 26.8.1
APP VERSION: 3.6.1

** Please be patient while the chart is being deployed **

Kafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:

    kafka-test.fenton-neuroscience.svc.cluster.local

Each Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:

    kafka-test-controller-0.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092
    kafka-test-controller-1.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092
    kafka-test-controller-2.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092

The CLIENT listener for Kafka client connections from within your cluster have been configured with the following security settings:
    - SASL authentication

To connect a client to your Kafka, you need to create the 'client.properties' configuration files with the content below:

security.protocol=SASL_PLAINTEXT
sasl.mechanism=SCRAM-SHA-256
sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required     username="user1"     password="o7Aj0AWHeM";

To create a pod that you can use as a Kafka client run the following commands:

    kubectl run kafka-test-client2 --restart='Never' --image docker.io/bitnami/kafka:3.6.1-debian-11-r6 --namespace fenton-neuroscience --command -- sleep infinity
    kubectl cp --namespace fenton-neuroscience /path/to/client.properties kafka-test-client:/tmp/client.properties
    kubectl exec --tty -i kafka-test-client --namespace fenton-neuroscience -- bash

    PRODUCER:
        kafka-console-producer.sh             --producer.config /tmp/client.properties             --broker-list kafka-test-controller-0.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092,kafka-test-controller-1.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092,kafka-test-controller-2.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092             --topic test

    CONSUMER:
        kafka-console-consumer.sh             --consumer.config /tmp/client.properties             --bootstrap-server kafka-test.fenton-neuroscience.svc.cluster.local:9092             --topic test             --from-beginning


//To Dockerpush inside the ProducuerConsumer path:
docker buildx build  -t registry.hsrn.nyu.edu/vip/corelink-examples/kafka-producer .  --platform linux/amd64
docker push registry.hsrn.nyu.edu/vip/corelink-examples/kafka-producer



To git commit:
git add .
git commit -am "updated"
git push -u origin kafka


To upgrade using helm:
helm upgrade kafka-test /Users/guobuzai/Projects/kafka -f values.yaml



AFTER ENABLING NODEPORT:
(base) guobuzai@10-18-211-59 kafka % helm upgrade kafka-test /Users/guobuzai/Projects/kafka -f values.yaml
Release "kafka-test" has been upgraded. Happy Helming!
NAME: kafka-test
LAST DEPLOYED: Tue Feb 20 11:03:35 2024
NAMESPACE: fenton-neuroscience
STATUS: deployed
REVISION: 4
TEST SUITE: None
NOTES:
CHART NAME: kafka
CHART VERSION: 26.8.5
APP VERSION: 3.6.1

** Please be patient while the chart is being deployed **

Kafka can be accessed by consumers via port 9092 on the following DNS name from within your cluster:

    kafka-test.fenton-neuroscience.svc.cluster.local

Each Kafka broker can be accessed by producers via port 9092 on the following DNS name(s) from within your cluster:

    kafka-test-controller-0.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092
    kafka-test-controller-1.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092
    kafka-test-controller-2.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092

The CLIENT listener for Kafka client connections from within your cluster have been configured with the following security settings:
    - SASL authentication

To connect a client to your Kafka, you need to create the 'client.properties' configuration files with the content below:

security.protocol=SASL_PLAINTEXT
sasl.mechanism=SCRAM-SHA-256
sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
    username="user1" \
    password="$(kubectl get secret kafka-test-user-passwords --namespace fenton-neuroscience -o jsonpath='{.data.client-passwords}' | base64 -d | cut -d , -f 1)";

To create a pod that you can use as a Kafka client run the following commands:

    kubectl run kafka-test-client --restart='Never' --image docker.io/bitnami/kafka:3.6.1-debian-11-r6 --namespace fenton-neuroscience --command -- sleep infinity
    kubectl cp --namespace fenton-neuroscience /path/to/client.properties kafka-test-client:/tmp/client.properties
    kubectl exec --tty -i kafka-test-client --namespace fenton-neuroscience -- bash

    PRODUCER:
        kafka-console-producer.sh \
            --producer.config /tmp/client.properties \
            --broker-list kafka-test-controller-0.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092,kafka-test-controller-1.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092,kafka-test-controller-2.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092 \
            --topic test

    CONSUMER:
        kafka-console-consumer.sh \
            --consumer.config /tmp/client.properties \
            --bootstrap-server kafka-test.fenton-neuroscience.svc.cluster.local:9092 \
            --topic test \
            --from-beginning
To connect to your Kafka controller+broker nodes from outside the cluster, follow these instructions:
    Kafka brokers domain: You can get the external node IP from the Kafka configuration file with the following commands (Check the EXTERNAL listener)

        1. Obtain the pod name:

        kubectl get pods --namespace fenton-neuroscience -l "app.kubernetes.io/name=kafka,app.kubernetes.io/instance=kafka-test,app.kubernetes.io/component=kafka"

        2. Obtain pod configuration:

        kubectl exec -it KAFKA_POD -- cat /opt/bitnami/kafka/config/server.properties | grep advertised.listeners
    Kafka brokers port: You will have a different node port for each Kafka broker. You can get the list of configured node ports using the command below:

        echo "$(kubectl get svc --namespace fenton-neuroscience -l "app.kubernetes.io/name=kafka,app.kubernetes.io/instance=kafka-test,app.kubernetes.io/component=kafka,pod" -o jsonpath='{.items[*].spec.ports[0].nodePort}' | tr ' ' '\n')"

The EXTERNAL listener for Kafka client connections from within your cluster have been configured with the following settings:
    - SASL authentication

To connect a client to your Kafka, you need to create the 'client.properties' configuration files with the content below:

security.protocol=SASL_PLAINTEXT
sasl.mechanism=SCRAM-SHA-256
sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
    username="user1" \
    password="$(kubectl get secret kafka-test-user-passwords --namespace fenton-neuroscience -o jsonpath='{.data.client-passwords}' | base64 -d | cut -d , -f 1)";


 Obtain pod configuration: 
(base) guobuzai@10-18-211-59 kafka % kubectl exec -it kafka-test-controller-2 -- cat /opt/bitnami/kafka/config/server.properties | grep advertised.listeners
Defaulted container "kafka" out of: kafka, auto-discovery (init), kafka-init (init)
advertised.listeners=CLIENT://kafka-test-controller-2.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9092,INTERNAL://kafka-test-controller-2.kafka-test-controller-headless.fenton-neuroscience.svc.cluster.local:9094,EXTERNAL://10.32.250.16:32281

(base) guobuzai@10-18-211-59 kafka %  echo "$(kubectl get svc --namespace fenton-neuroscience -l "app.kubernetes.io/name=kafka,app.kubernetes.io/instance=kafka-test,app.kubernetes.io/component=kafka,pod" -o jsonpath='{.items[*].spec.ports[0].nodePort}' | tr ' ' '\n')"
30858
31436
32281

